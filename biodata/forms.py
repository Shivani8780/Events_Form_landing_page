from django import forms
from .models import CandidateBiodata

class CandidateBiodataForm(forms.ModelForm):
    GENDER_CHOICES = [
        ('Male', 'Male'),
        ('Female', 'Female'),
    ]
    RESIDENCE_AREA_CATEGORY_CHOICES = [
        ('Gujarat Region (North , Central , South)', 'Gujarat Region (North , Central , South)'),
        ('Saurshtra - Kachchh Region', 'Saurshtra - Kachchh Region'),
        ('Mumbai - Maharashtra - Rest of India Region', 'Mumbai - Maharashtra - Rest of India Region'),
        ('NRI (Non Residential Indian - Any Visa) Region (Out of India)', 'NRI (Non Residential Indian - Any Visa) Region (Out of India)'),
    ]

    gender = forms.ChoiceField(choices=GENDER_CHOICES, required=True, label="Candidate Gender")
    registration_by = forms.CharField(max_length=255, required=True, label="Who is doing this Registration ? (ркХрлЛркг рк░рлЗркЬрлАрк╕рлНркЯрлНрк░рлЗрк╢рки ркХрк░рлА рк░рк╣рлНркпрлБркВ ркЫрлЗ ? ркП рк╡рк┐ркЧркд ркЕрк╣рлАркВ рк▓ркЦрк╢рлЛ)   ЁЯФ┤ Example : SELF / Candidate's Father (Name) / Candidate's Mother (Name) /  Candidate's Brother (Name)  , etc ЁЯФ┤")
    registrant_mobile = forms.CharField(max_length=20, required=True, label="ркЬрлЗ ркЖ рк░рлЗркЬрлАрк╕рлНркЯрлНрк░рлЗрк╢рки ркХрк░рлА рк░рк╣рлНркпрлБркВ ркЫрлЗ , ркдрлЗ ркЕрк╣рлАркВ рккрлЛркдрк╛ркирлЛ MOBILE ркиркВркмрк░ рк▓ркЦрк╢рлЛ // Mention here your own Mobile Number (for Reference & Verification Purpose)")
    candidate_current_city = forms.CharField(max_length=255, required=False, label="Candidate Current City / ркЙркорлЗркжрк╡рк╛рк░ рккрлЛркдрлЗ рк╣рк╛рк▓ ркХрк╛ркпрк╛ CITY / рк╢рк╣рлЗрк░ / ркЧрк╛рко ркорк╛ркВ рк░рк╣рлЗ ркЫрлЗ , ркдрлЗ ркЕрк╣рлАркВ рк▓ркЦрлЛ :")
    residence_area_category = forms.ChoiceField(choices=RESIDENCE_AREA_CATEGORY_CHOICES, required=True, label="Candidate Current Residence Area Category")
    current_country = forms.CharField(max_length=255, required=True, label="Candidate Current Country")

    visa_status = forms.ChoiceField(choices=CandidateBiodata.VISA_STATUS_CHOICES, required=True, label="Visa or Residence Status Of Candidate")
    marital_status = forms.ChoiceField(choices=CandidateBiodata.MARITAL_STATUS_CHOICES, required=True, label="Marriage Status")
    shani_mangal = forms.ChoiceField(choices=CandidateBiodata.SHANI_MANGAL_CHOICES, required=False, label="Shani / Mangal", initial='')

    birth_time = forms.TimeField(
        required=False,
        widget=forms.TimeInput(attrs={'type': 'time'}),
        label="Time Of Birth"
    )

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        # Reorder fields to place candidate_current_city before residence_area_category and current_country
        field_order = [
            'candidate_name',
            'gender',
            'registration_by',
            'registrant_mobile',
            'candidate_current_city',
            'residence_area_category',
            'current_country',
            'visa_status',
            'photograph',
            'dob',
            'birth_time',
            'birth_place',
            'height',
            'weight',
            'education',
            'education_details',
            'education_custom',
            'occupation',
            'occupation_details',
            'monthly_income',
            'marital_status',
            'nadi',
            'shani_mangal',
            'type_of_brahmin',
            'gotra',
            'kuldevi',
            'father_name',
            'father_mobile',
            'mother_name',
            'mother_mobile',
            'siblings',
            'partner_education',
            'partner_location',
            'partner_age_bracket',
            'other_specific_choice',
            'declaration',
            'declaration_agree',
            'declaration_disagree',
        ]
        self.order_fields(field_order)

    OCCUPATION_CHOICES = [
        ('Government Job', 'Government Job'),
        ('Private MNC Job', 'Private MNC Job'),
        ('Self Employed (Own Practice)', 'Self Employed (Own Practice)'),
        ('Own Business', 'Own Business'),
        ('Job + Business', 'Job + Business'),
        ('Free Lancing', 'Free Lancing'),
        ('Student (Studies Running)', 'Student (Studies Running)'),
        ('Searching Job', 'Searching Job'),
        ('Home Works (ghar-kaam)', 'Home Works (ghar-kaam)'),
    ]
    occupation = forms.ChoiceField(choices=OCCUPATION_CHOICES, required=True, label="Job/Business/Occupation Category")

    occupation_details = forms.CharField(
        widget=forms.Textarea(attrs={'class': 'form-control small-input', 'style': 'height: 60px;'}),
        required=False,
        label="Details on Job / Business / Occupation",
    )

    education_custom = forms.CharField(
        max_length=255,
        required=False,
        label="Education",
    )

    height = forms.CharField(
        max_length=50,
        required=False,
        label="Height (In Feet)",
        help_text='Example: Enter height like 4.05 feet for 4 feet 5 inches.'
    )

    partner_age_bracket = forms.CharField(
        max_length=100,
        required=False,
        label="рккрк╛рк░рлНркЯркирк░ ркЙркВркорк░ рк╢рлНрк░рлЗркгрлА (Partner Age Bracket)",
        help_text='Example: Enter age range like 27 to 30.'
    )

    dob = forms.DateField(label="Date Of Birth", widget=forms.DateInput(attrs={'type': 'date'}))


    class Meta:
        model = CandidateBiodata
        fields = '__all__'
        widgets = {
            # Removed fields widgets
        }
        labels = {
            'candidate_name': 'Name Of Candidate / ркЙркорлЗркжрк╡рк╛рк░ ркирлБркВ ркирк╛рко',
            'dob': 'Date Of Birth',
            'birth_time': 'Time Of Birth',
            'birth_place': 'Birth Place',
            'height': 'Height (In Feet)',
            'weight': 'Weight (In KG)',
            'education': 'Highest Education Category',
            'education_details': 'Education',
            'occupation': 'Job/Business/Occupation Category',
            'occupation_details': 'Details on Job / Business / Occupation',
            'monthly_income': 'Salary (optional) Per Month Salary)',
            'partner_education': 'Choice Of Education (Partner Preference)',
            'partner_location': 'Choice Of Location (Partner Preference)',
            'partner_age_bracket': 'Choice Of Age Gap/ Difference in Year (Partner Preference)',
            'declaration': 'Declaration : ркнрлВркжрлЗрк╡ ркирлЗркЯрк╡рк░рлНркХ ркирк╛ рк╕рк┐ркжрлНркзрк╛ркВркдрлЛ ркЕркирлЗ ркирлАркдрк┐-ркирк┐ркпркорлЛ рккрлНрк░ркорк╛ркгрлЗ ,  (рлз) рк╣рлБркВ ркЕркирлЗ ркорк╛рк░рлЛ рккрк░рк┐рк╡рк╛рк░ , рк╕рк╛ркорлЗ ркерлА ркЖрк╡ркдрк╛ ркжрк░рлЗркХ ркнрлВркжрлЗрк╡ ркирлЛ ркХрлЛрк▓ рк╡рк┐ркиркорлНрк░ркдрк╛ ркЕркирлЗ рк╢рк╛ркВркдрк┐ ркерлА рк▓ркИрк╢рлБркВ , ркдрлЗркоркирлЗ ркЕркорк╛рк░рлЛ рк╣рк╛ / ркирк╛ , ркЬрлЗ рккркг ркЬрк╡рк╛ркм рк╣рлЛркп ркдрлЗ рк╕рк░рк│ркдрк╛ , ркЖркжрк░ркдрк╛-рккрлВрк░рлНрк╡ркХ ркЕркирлЗ ркирк┐рк╣-рк╕ркВркХрлЛркЪ ркерлА рклрлЛрки ркЙрккрк░ ркмрлЛрк▓рлАркирлЗ ркХрлЗ рккркЫрлА рк╡рлЛркЯрлНрк╕ркПркк ркорк╛ркВ рк▓ркЦрлАркирлЗ (ркЕркирлНркп рк░рлАркдрлЗ) ркЬркгрк╛рк╡рлАрк╢рлБркВ .  (рли) ркХрлЛрк▓ ркХрк░ркирк╛рк░ рк╕рк╛ркорлЗ рк╡рк╛рк│рк╛ ркнрлВркжрлЗрк╡ ркирлБркВ ркЕркорлЗ ркЕрккркорк╛рки ркирк╣рлАркВ ркХрк░рлАркпрлЗ ркЕркирлЗ ркЬрлЗрко-ркдрлЗрко ркдрлЗ ркнрлВркжрлЗрк╡ ркирлЗ ркЙркдрк╛рк░рлА ркирк╣рк┐ рккрк╛ркбрлАркпрлЗ , ркдрлЗркоркирлА рк╕рк╛ркерлЗ рк╡рлНркпрк╡рк╕рлНркерк┐ркд рк╡рк░рлНркдрки ркХрк░рлАрк╢рлБркВ . (рлй) ркЖ рк╕рк╛ркерлЗркЬ , рккрлНрк░ркерко ркХрлЛрк▓  ркХрлЗ ркорлЗрк╕рлЗркЬ ркХрк░ркирк╛рк░ ркнрлВркжрлЗрк╡ ркирлА рккркг ркдрлЗркЯрк▓рлАркЬ ркЬрк╡рк╛ркмркжрк╛рк░рлА ркЫрлЗ ркХрлЗ ркдрлЗ ркХрлЛркИ рккркг рккрлНрк░ркХрк╛рк░ ркерлА рк╕рк╛ркорлЗ рк╡рк╛рк│рк╛ рккрк╛ркдрлНрк░ ркХрлЗ рккркЫрлА ркдрлЗркоркирк╛ ркорк╛ркдрк╛-рккрк┐ркдрк╛ ркирлЗ рк╡рк╛рк░ркВрк╡рк╛рк░ рклрлЛрки ркХрк░рлАркирлЗ ркХрлЗ ркЕркирлНркп рк░рлАркдрлЗ рк╣рлЗрк░рк╛рки ркирк╣рк┐ ркХрк░рлЗ....  ркЬрлЛ ркХрлЛркИ рккркг рклрлЗркорк┐рк▓рлА ркирлА ркЕркорлЛркирлЗ ркЕркорлБркХ ркЙркорлЗркжрк╡рк╛рк░-рклрлЗркорк┐рк▓рлА ркорк╛ркЯрлЗ ркХркорлНрккрлНрк▓рлЗрки ркорк│рк╢рлЗ ркдрлЛ ркдрлЗркоркирлЛ ркмрк╛ркпрлЛркбрлЗркЯрк╛ рк░ркжрлНркж ркХрк░рк╡рк╛ркорк╛ркВ ркЖрк╡рк╢рлЗ ркЕркирлЗ ркдрлЗркоркирлЗ ркЖркЧрк╛ркорлА рк▓ркЧрлНрки-ркорлЗрк│рк╛ ркорк╛ркВ рк╕рлНркерк╛рки ркирк╣рк┐ ркорк│рлЗ . ркнрлВркжрлЗрк╡ ркирлЛ ркЕрк░рлНрке ркЫрлЗ ркнрлВ + ркжрлЗрк╡ , ркПркЯрк▓рлЗ ркХрлЗ ркзрк░ркдрлА рккрк░ркирлЛ ркжрлЗрк╡ , ркдрлЛ ркЖрккркгрк╛ ркЧрлБркгрлЛ рккркг ркжрлЗрк╡рлЛ ркЬрлЗрк╡рк╛ рк╣рлЛрк╡рк╛ ркЬрлЛркИркП . рк╢рлБркн ркЕркирлЗ рк╢рлБркжрлНркз рк╡рк┐ркЪрк╛рк░ рк░рк╛ркЦрк╡рк╛ ркЬрлЛркИркП , рк╡рк┐ркЪрк╛рк░ ркерлА рк╡рлГркдрлНркдрк┐ ркмркирлЗ ркЫрлЗ , рк╡рлГркдрлНркдрк┐ ркерлА рк╡рк╛ркгрлА ркЕркирлЗ рк╡рк░рлНркдрки ркирк┐рк░рлНркорк╛ркг рккрк╛ркорлЗ ркЫрлЗ , рк╡рк╛ркгрлА ркЕркирлЗ рк╡рк░рлНркдрки ркерлА рк╡рлНркпркХрлНркдрк┐ркдрлНрк╡ ркмркирлЗ ркЫрлЗ ркЕркирлЗ рк╡рлНркпркХрлНркдрк┐ркдрлНрк╡ ркерлАркЬ ркорк╛ркгрк╕ ркирлА ркУрк│ркЦ ркерк╛ркп ркЫрлЗ ркЕркирлЗ I agree to Terms & Conditions of Bhudev Network organization.',
            'declaration_agree': 'Agree (ркЙрккрк░ ркорлБркЬркм рк╣рлБркВ ркорк╛ркирлБркВ ркЫрлБркВ ркЕркирлЗ ркдрлЗрко ркХрк░рлАрк╢) - ркорк╛рк░рлЛ ркмрк╛ркпрлЛркбрлЗркЯрк╛ ркмрлБркХрк▓рлЗркЯ ркорк╛ркВ ркЪрлЛркХрлНркХрк╕ рк╕ркорк╛рк╡рлЗрк╢ ркХрк░рк╢рлЛркЬрлА',
            'declaration_disagree': 'Disagree (ркЙрккрк░ ркорлБркЬркм рк╣рлБркВ ркирк╣рк┐ ркорк╛ркирлБркВ)  - ркорк╛рк░рлЛ ркмрк╛ркпрлЛркбрлЗркЯрк╛ ркХрлЗркирлНрк╕рк▓ ркХрк░рлА ркжрлЗркЬрлЛ',
            'gender': 'Candidate Gender',
            'registration_by': 'Who is doing this Registration ? (ркХрлЛркг рк░рлЗркЬрлАрк╕рлНркЯрлНрк░рлЗрк╢рки ркХрк░рлА рк░рк╣рлНркпрлБркВ ркЫрлЗ ? ркП рк╡рк┐ркЧркд ркЕрк╣рлАркВ рк▓ркЦрк╢рлЛ)   Example : SELF / Candidate\'s Father (Name) / Candidate\'s Mother (Name) /  Candidate\'s Brother (Name)  , etc',
            'registrant_mobile': 'ркЬрлЗ ркЖ рк░рлЗркЬрлАрк╕рлНркЯрлНрк░рлЗрк╢рки ркХрк░рлА рк░рк╣рлНркпрлБркВ ркЫрлЗ , ркдрлЗ ркЕрк╣рлАркВ рккрлЛркдрк╛ркирлЛ MOBILE ркиркВркмрк░ рк▓ркЦрк╢рлЛ // Mention here your own Mobile Number (for Reference & Verification Purpose)',
            'residence_area_category': 'Candidate Current Residence Area Category',
            'current_country': 'Candidate Current Country',
            'visa_status': 'Visa or Residence Status Of Candidate',
            'photograph': 'Upload 1 Candidate Photo (Photo Should be Clear visible front-face, Bright light on Face, No Goggles or Cap , Close-up photo or Passport Size Photo is required)',    

        }
