"""
Django settings for biodata_project project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-please-replace-this-with-your-own-secret-key'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# Add your PythonAnywhere domain or IP address here
ALLOWED_HOSTS = ['Shivani19.pythonanywhere.com', 'www.yourdomain.com']

# Add this to allow your ngrok URL as trusted origin for CSRF
CSRF_TRUSTED_ORIGINS = [
    'https://f40f-103-240-207-159.ngrok-free.app'
]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'biodata',
    'widget_tweaks',
    # Removed cloudinary apps for PythonAnywhere free plan compatibility
    # 'cloudinary',
    # 'cloudinary_storage',
]

# Cloudinary configuration
# Disabled Cloudinary settings for PythonAnywhere free plan compatibility
# CLOUDINARY_STORAGE = {
#     'CLOUD_NAME': 'dlapbhavc',  # Replace with your Cloudinary cloud name
#     'API_KEY': '837941825354552',        # Replace with your Cloudinary API key
#     'API_SECRET': 'SnwE8QAwc_LE-jz5hDlS922DrXM',  # Replace with your Cloudinary API secret
# }

# Use local media storage instead of Cloudinary
DEFAULT_FILE_STORAGE = 'django.core.files.storage.FileSystemStorage'

MEDIA_URL = '/media/'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'biodata_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'biodata_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

import os

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / 'static']
STATIC_ROOT = BASE_DIR / 'staticfiles'  # Directory where collectstatic will collect static files for production

# Media files (Uploaded files like photographs)
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'


# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Email configuration for sending confirmation emails

# For production, configure email backend with environment variables for security
import os

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = os.environ.get('EMAIL_HOST', 'smtp.gmail.com')
EMAIL_PORT = int(os.environ.get('EMAIL_PORT', 587))
EMAIL_USE_TLS = os.environ.get('EMAIL_USE_TLS', 'True') == 'True'
EMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER', 'mishrashivani8780@gmail.com')
EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD', 'drmr cnuk tasy qunp')
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER



# Public base URL for media files - set to your current ngrok URL
# Removed ngrok URL as it is no longer needed
# PUBLIC_BASE_URL = 'https://f40f-103-240-207-159.ngrok-free.app'

# ALLOWED_HOSTS setup for current domain
ALLOWED_HOSTS = ['Shivani19.pythonanywhere.com']

#import cloudinary

#cloudinary.config(
#    cloud_name=CLOUDINARY_STORAGE.get('CLOUD_NAME'),
#    api_key=CLOUDINARY_STORAGE.get('API_KEY'),
 #   api_secret=CLOUDINARY_STORAGE.get('API_SECRET'),
 #   secure=True
#)
